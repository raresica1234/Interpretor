=======================
	Program id: 12
Execution Stack: 
(Ref(int) v1; (Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))))

Symbol table: 
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: 
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
Ref(int) v1
(Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))))

Symbol table: 
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: v1 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
(Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))))

Symbol table: v1 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: v1 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
Ref(int) v2
(Ref(int) v3; (int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))

Symbol table: v1 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: v1 = (0, int)
v2 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
(Ref(int) v3; (int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))

Symbol table: v1 = (0, int)
v2 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: v1 = (0, int)
v2 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
Ref(int) v3
(int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))

Symbol table: v1 = (0, int)
v2 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
(int cnt; (new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))

Symbol table: v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
int cnt
(new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))

Symbol table: v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
(new(v1, 2); (new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))

Symbol table: cnt = 0
v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

=======================

=======================
	Program id: 12
Execution Stack: 
new(v1, 2)
(new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))

Symbol table: cnt = 0
v1 = (0, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:

File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (1, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:
1 -> 2
=======================

=======================
	Program id: 12
Execution Stack: 
(new(v2, 3); (new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))

Symbol table: cnt = 0
v1 = (1, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:
1 -> 2
File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (1, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:
1 -> 2
=======================

=======================
	Program id: 12
Execution Stack: 
new(v2, 3)
(new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))

Symbol table: cnt = 0
v1 = (1, int)
v2 = (0, int)
v3 = (0, int)
Heap Table:
1 -> 2
File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (0, int)
Heap Table:
1 -> 2
2 -> 3
=======================

=======================
	Program id: 12
Execution Stack: 
(new(v3, 4); (newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))

Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (0, int)
Heap Table:
1 -> 2
2 -> 3
File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (0, int)
Heap Table:
1 -> 2
2 -> 3
=======================

=======================
	Program id: 12
Execution Stack: 
new(v3, 4)
(newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))

Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (0, int)
Heap Table:
1 -> 2
2 -> 3
File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
(newLatch(cnt, readHeap(v2)); (fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))

Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))

Symbol table: cnt = 0
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:

Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
(fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))); (fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:
1 -> 3
Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
fork((writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt))))
(fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:
1 -> 3
Output:

=======================

=======================
	Program id: 12
Execution Stack: 
(fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
	Program id: 13
Execution Stack: 
(writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:
1 -> 3
Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Program id: 13
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
(fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))); (fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100))))))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
	Program id: 13
Execution Stack: 
(writeHeap(v1, readHeap(v1) * 10); (print(readHeap(v1)); countDown(cnt)))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:
1 -> 3
Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Program id: 13
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
fork((writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt))))
(fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
	Program id: 13
Execution Stack: 
writeHeap(v1, readHeap(v1) * 10)
(print(readHeap(v1)); countDown(cnt))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 2
2 -> 3
3 -> 4
File Table:

Latch Table:
1 -> 3
Output:

=======================

=======================
	Program id: 12
Execution Stack: 
(fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown(cnt)))); (await(cnt); (print(100); (countDown(cnt); print(100)))))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
	Program id: 13
Execution Stack: 
(print(readHeap(v1)); countDown(cnt))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
	Program id: 14
Execution Stack: 
(writeHeap(v2, readHeap(v2) * 10); (print(readHeap(v2)); countDown(cnt)))

Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 20
2 -> 3
3 -> 4
File Table:

Latch Table:
1 -> 3
Output:

=======================

=======================
Garbage Collection:
Program id: 12
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Program id: 13
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Program id: 14
Symbol table: cnt = 1
v1 = (1, int)
v2 = (2, int)
v3 = (3, int)
Heap Table:
1 -> 20
2 -> 3
3 -> 4
=======================

=======================
	Program id: 12
Execution Stack: 
(fork((writeHeap(v3, readHeap(v3) * 10); (print(readHeap(v3)); countDown